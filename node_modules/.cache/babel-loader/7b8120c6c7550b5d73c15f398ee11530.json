{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bonifacecheruiyot/Code CHALLENGE/phase-2-hooks-code-challenge-bank-of-flatiron-kieyp/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const initialState = {\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  };\n  const [formData, setFormData] = useState(initialState);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (!response.ok) {\n        console.error(\"Failed to add transaction\");\n        throw new Error(\"Failed to add transaction\");\n      }\n\n      alert(\"Transaction added successfully\");\n      resetForm();\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  const resetForm = () => {\n    setFormData(initialState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.date,\n          onChange: handleChange,\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.description,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.category,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.amount,\n          onChange: handleChange,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"T4yXvXp9ZUeg/I2tM6GijGKf8Os=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/bonifacecheruiyot/Code CHALLENGE/phase-2-hooks-code-challenge-bank-of-flatiron-kieyp/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","initialState","date","description","category","amount","formData","setFormData","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","console","error","Error","alert","resetForm","catch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  const initialState = {\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialState);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          console.error(\"Failed to add transaction\");\n          throw new Error(\"Failed to add transaction\");\n        }\n        alert(\"Transaction added successfully\");\n        resetForm();\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const resetForm = () => {\n    setFormData(initialState);\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input\n            value={formData.date}\n            onChange={handleChange}\n            type=\"date\"\n            name=\"date\"\n          />\n          <input\n            value={formData.description}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n          />\n          <input\n            value={formData.category}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n          />\n          <input\n            value={formData.amount}\n            onChange={handleChange}\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}